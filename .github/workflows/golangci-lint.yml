# Copyright 2024 StreamNative
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: golangci-lint
on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
  pull_request:
permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read
env:
  GOPRIVATE: github.com/streamnative
jobs:
  golangci:
    name: lint
    runs-on: ubuntu-22.04
    env:
      ACCESS_TOKEN: ${{ secrets.SNBOT_GITHUB_TOKEN }}
      GOPRIVATE: github.com/streamnative
    steps:
      - name: Set up git token
        run: |
          git config --global url."https://${ACCESS_TOKEN}:@github.com/".insteadOf "https://github.com/"

      - uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.64
          args: --timeout=5m

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          # skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 15
        if: failure()
        # You can use golangci-lint run --fix to see how to fix the error