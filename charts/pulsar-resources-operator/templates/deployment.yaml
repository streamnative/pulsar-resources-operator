# Copyright 2024 StreamNative
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pulsar-resources-operator.fullname" . }}
  namespace: {{ include "pulsar-resources-operator.namespace" .}}
  labels:
    {{- include "pulsar-resources-operator.labels" . | nindent 4 }}
    {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "pulsar-resources-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      labels:
        {{- include "pulsar-resources-operator.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if or .Values.cloudStorage.gcs.enabled .Values.cloudStorage.s3.enabled .Values.cloudStorage.azure.enabled }}
      volumes:
        {{- if and .Values.cloudStorage.gcs.enabled (not .Values.cloudStorage.gcs.serviceAccount.useWorkloadIdentity) }}
        - name: gcs-credentials
          secret:
            secretName: {{ .Values.cloudStorage.gcs.serviceAccount.key.secretName }}
        {{- end }}
      {{- end }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      serviceAccountName: {{ include "pulsar-resources-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --resync-period={{ .Values.features.resyncPeriod | default 10 }}
        - --retry-count={{ .Values.features.retryCount | default 5 }}
        command:
        - /manager
        env:
        {{- if .Values.features.alwaysUpdatePulsarResource }}
        - name: ALWAYS_UPDATE_PULSAR_RESOURCE
          value: "true"
        {{- end }}
        {{- if .Values.cloudStorage.s3.enabled }}
        - name: AWS_REGION
          value: {{ .Values.cloudStorage.s3.region | quote }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.cloudStorage.s3.credentials.secretName }}
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.cloudStorage.s3.credentials.secretName }}
              key: secret-access-key
        {{- end }}
        {{- if and .Values.cloudStorage.gcs.enabled (not .Values.cloudStorage.gcs.serviceAccount.useWorkloadIdentity) }}
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: {{ printf "%s/key.json" .Values.cloudStorage.gcs.serviceAccount.key.mountPath }}
        {{- end }}
        {{- if .Values.cloudStorage.azure.enabled }}
        - name: AZURE_STORAGE_ACCOUNT
          value: {{ .Values.cloudStorage.azure.accountName | quote }}
        {{- if .Values.cloudStorage.azure.credentials.useAccountKey }}
        - name: AZURE_STORAGE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.cloudStorage.azure.credentials.secretName }}
              key: storage-key
        {{- else }}
        - name: AZURE_STORAGE_SAS_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.cloudStorage.azure.credentials.secretName }}
              key: sas-token
        {{- end }}
        {{- end }}
        name: manager
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.manager.registry }}/{{ .Values.image.manager.repository }}:{{ .Values.image.manager.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if and .Values.cloudStorage.gcs.enabled (not .Values.cloudStorage.gcs.serviceAccount.useWorkloadIdentity) }}
        volumeMounts:
        - name: gcs-credentials
          mountPath: {{ .Values.cloudStorage.gcs.serviceAccount.key.mountPath }}
          readOnly: true
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
