# Copyright 2022 StreamNative
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

linters:
  disable-all: true
  enable:
  - asciicheck
  - bodyclose
  - deadcode
  - depguard
  - dogsled
  - errcheck
  - exportloopref
  - gci
  - goconst
  - gocritic
  - gocyclo
  # - godot
  - gofmt
  - goimports
  - goprintffuncname
  - gosec
  - gosimple
  - govet
  - ifshort
  - importas
  - ineffassign
  - misspell
  - nakedret
  - nilerr
  - nolintlint
  - prealloc
  - predeclared
  - revive
  - rowserrcheck
  - staticcheck
  - structcheck
  - stylecheck
  - thelper
  - typecheck
  - unconvert
  - unparam
  - varcheck
  - whitespace

linters-settings:
  godot:
    #   declarations - for top level declaration comments (default);
    #   toplevel     - for top level comments;
    #   all          - for all comments.
    scope: toplevel
    exclude:
    - '^ \+.*'
    - '^ ANCHOR.*'
  ifshort:
    # Maximum length of variable declaration measured in number of characters, after which linter won't suggest using short syntax.
    max-decl-chars: 50
  gci:
    local-prefixes: "github.com/streamnative"
    
  importas:
    no-unaliased: true
    alias:
      # Kubernetes
      - pkg: k8s.io/api/core/v1
        alias: corev1
      - pkg: k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1
        alias: apiextensionsv1
      - pkg: k8s.io/apimachinery/pkg/apis/meta/v1
        alias: metav1
      - pkg: k8s.io/apimachinery/pkg/api/errors
        alias: apierrors
      - pkg: k8s.io/apimachinery/pkg/util/errors
        alias: kerrors
      # Controller Runtime
      - pkg: sigs.k8s.io/controller-runtime
        alias: ctrl
  nolintlint:
    allow-unused: false
    allow-leading-space: false
    require-specific: true
  staticcheck:
    go: "1.17"
  stylecheck:
    go: "1.17"
  gosec:
    excludes:
    - G307 # Deferring unsafe method "Close" on type "\*os.File"
    - G108 # Profiling endpoint is automatically exposed on /debug/pprof
  gocritic:
    enabled-tags:
      - experimental
    disabled-checks:
    - appendAssign
    - dupImport # https://github.com/go-critic/go-critic/issues/845
    - evalOrder
    - ifElseChain
    - octalLiteral
    - regexpSimplify
    - sloppyReassign
    - truncateCmp
    - typeDefFirst
    - unnamedResult
    - unnecessaryDefer
    - whyNoLint
    - wrapperFunc
issues:
  max-same-issues: 0
  max-issues-per-linter: 0
  # We are disabling default golangci exclusions because we want to help reviewers to focus on reviewing the most relevant
  # changes in PRs and avoid nitpicking.
  exclude-use-default: false
  exclude-rules:
  - linters:
    - revive
    text: "exported: exported method .*\\.(Reconcile|SetupWithManager|SetupWebhookWithManager) should have comment or be unexported"
  - linters:
    - errcheck
    text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
  # Exclude some packages or code to require comments, for example test code, or fake clients.
  - linters:
    - revive
    text: exported (method|function|type|const) (.+) should have comment or be unexported
    source: (func|type).*Fake.*
  - linters:
    - revive
    text: exported (method|function|type|const) (.+) should have comment or be unexported
    path: fake_\.go
  - linters:
    - revive
    text: exported (method|function|type|const) (.+) should have comment or be unexported
    path: cmd/clusterctl/internal/test/providers.*.go
  - linters:
    - revive
    text: exported (method|function|type|const) (.+) should have comment or be unexported
    path: "(framework|e2e)/.*.go"
  # Disable unparam "always receives" which might not be really
  # useful when building libraries.
  - linters:
    - unparam
    text: always receives
  # Dot imports for gomega or ginkgo are allowed
  # within test files.
  - path: _test\.go
    text: should not use dot imports
  - path: (framework|e2e)/.*.go
    text: should not use dot imports
  - path: _test\.go
    text: cyclomatic complexity
  # Append should be able to assign to a different var/slice.
  - linters:
    - gocritic
    text: "appendAssign: append result not assigned to the same slice"
  # ifshort flags variables that are only used in the if-statement even though there is
  # already a SimpleStmt being used in the if-statement in question.
  - linters:
    - ifshort
    text: "variable .* is only used in the if-statement"
    path: controllers/mdutil/util.go
  # Disable linters for conversion
  - linters:
    - staticcheck
    text: "SA1019: in.(.+) is deprecated"
    path: .*(api|types)\/.*\/conversion.*\.go$
  - linters:
    - revive
    text: exported (method|function|type|const) (.+) should have comment or be unexported
    path: .*(api|types)\/.*\/conversion.*\.go$
  - linters:
    - revive
    text: "var-naming: don't use underscores in Go names;"
    path: .*(api|types)\/.*\/conversion.*\.go$
  - linters:
    - revive
    text: "receiver-naming: receiver name"
    path: .*(api|types)\/.*\/conversion.*\.go$
  - linters:
    - stylecheck
    text: "ST1003: should not use underscores in Go names;"
    path: .*(api|types)\/.*\/conversion.*\.go$
  - linters:
    - stylecheck
    text: "ST1016: methods on the same type should have the same receiver name"
    path: .*(api|types)\/.*\/conversion.*\.go$
  # hack/tools
  - linters:
    - typecheck
    text: import (".+") is a program, not an importable package
    path: ^tools\.go$
  # Ignore ifshort false positive
  # TODO(sbueringer) false positive: https://github.com/esimonov/ifshort/issues/23
  - linters:
    - ifshort
    text:  "variable 'isDeleteNodeAllowed' is only used in the if-statement.*"
    path: ^controllers/machine_controller\.go$

run:
  timeout: 10m
  build-tags:
  - tools
  - e2e
  skip-files:
  - "zz_generated.*\\.go$"
  skip-dirs:
  - third_party
  allow-parallel-runners: true
